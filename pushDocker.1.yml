name: Push Docker
on:
  push:
    branches:
      - main
  schedule:
    - cron: 45 23 * * 0 # https://crontab.guru/#45_23_*_*_0
env:
  arch: linux/amd64
  dockerFile: src/Dockerfile
jobs:
  job:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    strategy:
      matrix:
        include:
          # - registry: docker.io
          #   username: jaidchen
          #   imageName: jaidchen/$repo
          #   passwordId: dockerHubToken
          - registry: ghcr.io
            imageName: ${{ github.event.repository.name }}
            metaRef: ghcr.io/${{ github.repository }}
            username: ${{ github.actor }}
            passwordId: GITHUB_TOKEN
    steps:
      - name: Set name
        id: nameSetter
        shell: bash
        run: repoName=${{ github.event.repository.name }} && repo=${repoName##docker-} && printf '::set-output name=imageName::%s' ${{ matrix.imageName }}
      - name: Set up qemu
        uses: docker/setup-qemu-action@v2
      - name: Set up buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to ${{ matrix.registry }}
        uses: docker/login-action@v2
        with:
          registry: ${{ matrix.registry }}
          username: ${{ matrix.username }}
          password: ${{ secrets[matrix.passwordId] }}
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4.0.1
        with:
          images: ${{ matrix.metaRef }}
      - name: Build and push to ${{ matrix.registry }}
        uses: docker/build-push-action@v3
        with:
          push: true
          file: ${{ env.dockerFile }}
          platforms: ${{ env.arch }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # cache-from: type=registry,ref=${{ steps.nameSetter.outputs.imageName }}:buildcache
          # cache-to: type=registry,ref=${{ steps.nameSetter.outputs.imageName }}:buildcache,mode=max
